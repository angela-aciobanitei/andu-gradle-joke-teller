apply plugin: 'com.android.application'
// Apply the Endpoints Framework Gradle Plugin after the android plugin
apply plugin: 'com.google.cloud.tools.endpoints-framework-client'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // The Endpoints Framework Gradle Plugin JAR
        // See: https://github.com/GoogleCloudPlatform/endpoints-framework-gradle-plugin
        classpath 'com.google.cloud.tools:endpoints-framework-gradle-plugin:1.0.3'
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    /**
     * To create product flavors you need to add them to the productFlavors{} block
     * in your build configuration and include the settings you want. Note: all flavors
     * must belong to a named flavor dimension, which is a group of product flavors.
     * You must assign all flavors to a flavor dimension; otherwise, you will get this
     * build error: "Error: All flavors must now belong to a named flavor dimension.
     * The flavor 'flavor_name' is not assigned to a flavor dimension." If a given
     * module specifies only one flavor dimension, Gradle automatically assigns all
     * of the module's flavors to that dimension.
     * See: https://developer.android.com/studio/build/build-variants#product-flavors
     */
    flavorDimensions 'version'
    productFlavors {
        free {
            dimension 'version'
            versionNameSuffix '-free'
            applicationIdSuffix = '.free'
        }
        paid {
            dimension 'version'
            versionNameSuffix '-paid'
            applicationIdSuffix = '.paid'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.0.2'

    // Google APIs Client Library for Java
    implementation 'com.google.api-client:google-api-client:1.23.0'

    // Google HTTP Client Library for Java.
    implementation 'com.google.http-client:google-http-client-android:1.23.0'

    // Annotations for Findbugs
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // Mobile Ads available only for free product flavor
    freeImplementation 'com.google.android.gms:play-services-ads:18.2.0'

    // Local unit tests (JUnit 4 framework)
    testImplementation 'junit:junit:4.12'

    // Instrumented tests (AndroidJUnitRunner, JUnit Rules, AndroidJUnit4)
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // The dependency on the GCE (Google Cloud Endpoints) module (backend)
    endpointsServer project(path: ':backend', configuration: 'endpoints')

    // The dependency on the Java library module
    implementation project(path: ':jokeTeller')

    // The dependency on the Android library module
    implementation project(path: ':displayjoke')
}
